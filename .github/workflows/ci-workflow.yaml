name: Gazette Continuous Integration

# TODO: change to pull_request once things are working
on:
  push: {}
  release:
    types: [created]

env:
  # TODO: see which of these env vars we still need on GH Actions
  # RocksDB version to build. Keep in sync with mk/config.mk
  # Also be sure to update the save_cache step below.
  ROCKSDB_VERSION: 6.7.3
  GOPATH: ${{ github.workspace }}/.build/go-path/


jobs:
  debug:
    runs-on: ubuntu-18.04
    container:
      image: gazette/ci-builder:20200421
    steps:
      - name: 'Print event info'
        run: |
          echo event_name=${{ github.event_name }};
          echo "ref=${{ github.ref }}" 
          echo "Event Json: " 
          echo '${{ toJson(github.event) }}'
          
  build:
    runs-on: ubuntu-18.04
    container:
      image: gazette/ci-builder:20200421
    needs: debug
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v2

      - name: 'Print Debug Info'
        run: |
          echo -e "*************** \n\n RUNNING BUILD \n\n *********************"
          echo "GOPATH env var =$GOPATH"
          echo "GOPATH expr = ${{ env.GOPATH }}"
          ls -al $GOPATH || echo "no GOPATH dir found"
          echo "ls of bin"
          ls -al ${{ env.GPPATH }}/bin || echo "no bin/ dir found"
          echo "ls of pkg/"
          ls -al ${{ env.GPPATH }}/pkg || echo "no pkg/ dir found"


        # The 'c<n>' in these Cache steps is just for changing the cache key so that
        # we can manually invalidate the cache if we need
      - name: 'RocksDB Cache'
        uses: actions/cache@v2
        with:
          key: rocksdb-c1-${{ env.ROCKSDB_VERSION }}
          path: ".build/rocksdb-v${{ env.ROCKSDB_VERSION }}"

      - name: 'Go Module Cache'
        uses: actions/cache@v2
        with:
          key: go-mod-c1-${{ hashFiles('go.sum') }}
          path: "${{ env.GOPATH }}/pkg"
          # If we don't have a cached directory that matches the hash exactly,
          # then this will allow a non-matching directory to be pulled in. This is safe
          # because go will use its own finer-grained cache invalidation logic
          restore-keys: "go-mod-c1-"

      - name: 'Install'
        run: "make go-install"

      - name: 'Test'
        # TODO: change target to 'go-test-ci' before this is merged
        run: "make go-test-fast"

      - name: 'Upload gazette Binary'
        uses: actions/upload-artifact@v2
        with:
          name: 'gazette-binaries'
          path: "${{ env.GOPATH }}/bin/gazette"

      - name: 'Upload gazctl Binary'
        uses: actions/upload-artifact@v2
        with:
          name: 'gazette-binaries'
          path: "${{ env.GOPATH }}/bin/gazctl"

      - name: 'Build Gazette Docker Image'
        run: "make ci-release-broker"

      - name: 'Build Gazette Examples Docker Image'
        run: "make ci-release-examples"

      - name: 'Docker login'
        run: |
          docker login -u '${{ secrets.DOCKER_USERNAME }}' -p '${{ secrets.DOCKER_PASSWORD }}' gcr.io

      - name: 'Push Docker Images'
        run: |
          make push-to-registry registry=gcr.io/helpful-kingdom-273219


  release:
    runs-on: ubuntu-18.04
    container:
      image: gazette/ci-builder:20200421
    needs: [debug, build]
    #if: ${{ github.event_name }} == 'release'

    steps:
      - name: 'Download Gazette Artifact'
        uses: actions/download-artifact@v2
        with:
          name: 'gazette-binaries'

      - name: 'Placeholder'
        run: |
          echo -e "*************** \n\n RUNNING RELEASE \n\n *********************"
          echo "GOPATH env var =$GOPATH"
          echo "GOPATH expr = ${{ env.GOPATH }}"
          ls -al $GOPATH || echo "no GOPATH dir found"
          echo "ls of bin"
          ls -al ${{ env.GPPATH }}/bin || echo "no bin/ dir found"
          echo "ls of pkg/"
          ls -al ${{ env.GPPATH }}/pkg || echo "no pkg/ dir found"
          echo "ls of ."
          ls -al
          echo "ls of gazette-binaries"
          ls -al gazette-binaries/ || echo "no gazette-binaries dir found"

